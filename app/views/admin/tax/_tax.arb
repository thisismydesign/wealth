# frozen_string_literal: true

tax_base = Asset.tax_base

div do
  # panel 'Regulated transactions' do
  #   close_trades = Tax::ClosedPositionsService.call(user: current_user, year:, from_asset_type: AssetType.etf)
  #   open_positions = Tax::AggregatedOpenPositionsService.call(user: current_user, year:, accept_previous_years: true,
  #                                                   to_asset_type: AssetType.etf)
  #   total_close = close_trades.sum { |trade| trade.tax_base_price&.amount || 0 }
  #   profits = TotalProfitsService.call(close_trades:)
  #   tax = profits * Rails.application.config.x.tax_rate.to_d

  #   h4 do
  #     span 'Total close: '
  #     optional_currency total_close, tax_base
  #   end

  #   h4 do
  #     span 'Total profit: '
  #     optional_currency profits, tax_base
  #   end

  #   h4 do
  #     span 'Total tax: '
  #     optional_currency tax, tax_base
  #   end

  #   render partial: 'admin/tax/closed_positions', locals: { close_trades:, year: }

  #   open_positions_label = "Open positions (opened in #{year} or earlier)"
  #   render partial: 'admin/tax/open_positions', locals: { label: open_positions_label, open_positions: }
  # end

  panel 'Crypto transactions' do
    closed_positions = Tax::ClosedPositionsService.call(user: current_user, year:, from_asset_type: AssetType.crypto)
    opened_positions = Tax::OpenedPositionsService.call(user: current_user, year:, to_asset_type: AssetType.crypto)
    total_close = closed_positions.sum { |trade| trade.tax_base_price&.amount || 0 }
    total_open = opened_positions.sum { |trade| trade.tax_base_price&.amount || 0 }
    profit = total_close - total_open
    tax = [profit, 0].max * Rails.application.config.x.tax_rate.to_d

    div do
      span 'Total open: ', class: 'text-lg font-semibold'
      optional_currency total_open, tax_base
    end

    div do
      span 'Total close: ', class: 'text-lg font-semibold'
      optional_currency total_close, tax_base
    end

    div do
      span 'Total profit: ', class: 'text-lg font-semibold'
      optional_currency profit, tax_base
    end

    div do
      span 'Total tax: ', class: 'text-lg font-semibold'
      optional_currency tax, tax_base
    end

    br
    render partial: 'admin/tax/positions',
           locals: { label: I18n.t('tax.closed_positions', year:), trades: closed_positions }
    render partial: 'admin/tax/positions',
           locals: { label: I18n.t('tax.opened_positions', year:), trades: opened_positions }
  end

  # panel 'Dividends' do
  #   income = Tax::TotalIncomeService.call(user: current_user, year:, income_type: IncomeType.dividend)
  #   tax = income * Rails.application.config.x.tax_rate.to_d

  #   h4 do
  #     span 'Total income: '
  #     optional_currency income, tax_base
  #   end

  #   h4 do
  #     span 'Total tax: '
  #     optional_currency tax, tax_base
  #   end
  # end

  # panel 'Interest' do
  #   income = Tax::TotalIncomeService.call(user: current_user, year:, income_type: IncomeType.interest)
  #   tax = income * Rails.application.config.x.tax_rate.to_d
  #   social_tax = income * Rails.application.config.x.social_tax_rate.to_d

  #   h4 do
  #     span 'Total income: '
  #     optional_currency income, tax_base
  #   end

  #   h4 do
  #     span 'Total tax: '
  #     optional_currency tax, tax_base
  #   end

  #   h4 do
  #     span 'Total social tax: '
  #     optional_currency social_tax, tax_base
  #   end
  # end
end
